import TelegramBot from "node-telegram-bot-api";
import { storage } from "./storage";

if (!process.env.TELEGRAM_BOT_TOKEN) {
  throw new Error("TELEGRAM_BOT_TOKEN is required");
}

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });

export function setupBot() {
  // –ö–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏
  bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId,
      "ü§ñ *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n" +
      "üìù */start* - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n" +
      "üìã */register* - –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏\n" +
      "üë§ */admin* - –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)\n" +
      "üí¨ */support <—Å–æ–æ–±—â–µ–Ω–∏–µ>* - –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n" +
      "üõç *–ú–µ–Ω—é –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:*\n" +
      "‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤\n" +
      "‚Ä¢ –ú–æ–∏ –∑–∞–∫–∞–∑—ã\n" +
      "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n" +
      "‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å\n\n" +
      "‚ùì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
      { parse_mode: "Markdown" }
    );
  });

  bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user) {
      bot.sendMessage(chatId,
        "üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤!*\n\n" +
        "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –≤–∞–º –Ω—É–∂–Ω–æ:\n\n" +
        "1Ô∏è‚É£ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ\n" +
        "2Ô∏è‚É£ –£–∫–∞–∑–∞—Ç—å –≤–∞—à Telegram ID –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:\n" +
        "`" + chatId + "`\n\n" +
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.\n" +
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.",
        {
          parse_mode: "Markdown",
          reply_markup: {
            keyboard: [
              [{ text: 'üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏' }],
              [{ text: '‚ùì –ü–æ–º–æ—â—å' }]
            ],
            resize_keyboard: true
          }
        }
      );
      return;
    }

    const keyboard = {
      keyboard: [
        [{ text: 'üõç –ö–∞—Ç–∞–ª–æ–≥' }, { text: 'üõí –ú–æ–∏ –∑–∞–∫–∞–∑—ã' }],
        [{ text: 'üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞' }, { text: 'üë§ –ü—Ä–æ—Ñ–∏–ª—å' }],
        [{ text: '‚ùì –ü–æ–º–æ—â—å' }]
      ],
      resize_keyboard: true
    };

    bot.sendMessage(chatId,
      `üëã *–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, ${user.username}!*\n\n` +
      "–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –º–µ–Ω—é:\n\n" +
      "üõç *–ö–∞—Ç–∞–ª–æ–≥* - –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ –ø–æ–∫—É–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤\n" +
      "üõí *–ú–æ–∏ –∑–∞–∫–∞–∑—ã* - –ò—Å—Ç–æ—Ä–∏—è –∏ —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–æ–≤\n" +
      "üí¨ *–ü–æ–¥–¥–µ—Ä–∂–∫–∞* - –°–≤—è–∑—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π\n" +
      "üë§ *–ü—Ä–æ—Ñ–∏–ª—å* - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ",
      {
        parse_mode: "Markdown",
        reply_markup: keyboard
      }
    );
  });

  bot.onText(/üë§ –ü—Ä–æ—Ñ–∏–ª—å/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    const orders = await storage.getUserOrders(user.id);
    const completedOrders = orders.filter(o => o.status === 'delivered').length;
    const activeOrders = orders.filter(o => ['pending', 'paid'].includes(o.status)).length;

    bot.sendMessage(chatId,
      "üë§ *–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*\n\n" +
      `*–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* ${user.username}\n` +
      `*ID Telegram:* \`${user.telegramId}\`\n` +
      `*–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:* ${new Date(user.createdAt).toLocaleDateString()}\n\n` +
      "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n" +
      `‚Ä¢ –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${orders.length}\n` +
      `‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ: ${completedOrders}\n` +
      `‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${activeOrders}\n\n` +
      "üí° *–î–µ–π—Å—Ç–≤–∏—è:*\n" +
      "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ üõç –ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è –ø–æ–∫—É–ø–æ–∫\n" +
      "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ üõí –ú–æ–∏ –∑–∞–∫–∞–∑—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤\n" +
      "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å –Ω–∞–º–∏",
      { parse_mode: "Markdown" }
    );
  });

  bot.onText(/üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏|\/register/, (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId,
      "üìù *–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:*\n\n" +
      "1Ô∏è‚É£ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç:\n" +
      "http://localhost:5000/auth\n\n" +
      "2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è'\n\n" +
      "3Ô∏è‚É£ –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É:\n" +
      "‚Ä¢ –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n" +
      "‚Ä¢ –ó–∞–¥–∞–π—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å\n" +
      "‚Ä¢ –í –ø–æ–ª–µ Telegram ID –≤–≤–µ–¥–∏—Ç–µ:\n" +
      "`" + chatId + "`\n\n" +
      "4Ô∏è‚É£ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –±–æ—Ç –∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start",
      { parse_mode: "Markdown" }
    );
  });

  bot.onText(/\/admin/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–°–Ω–∞—á–∞–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.\n" +
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /register –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    if (!user.isAdmin) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    bot.sendMessage(chatId,
      "üë®‚Äçüíº *–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å*\n\n" +
      "üåê –î–æ—Å—Ç—É–ø –ø–æ –∞–¥—Ä–µ—Å—É:\n" +
      "http://localhost:5000/admin/products\n\n" +
      "*–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–∞–Ω–µ–ª–∏:*\n" +
      "‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏\n" +
      "‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏\n" +
      "‚úì –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫–∞–∑–æ–≤\n" +
      "‚úì –†–∞–±–æ—Ç–∞ —Å —Ç–∏–∫–µ—Ç–∞–º–∏\n\n" +
      "üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–≥–∞–∑–∏–Ω–æ–º",
      { parse_mode: "Markdown" }
    );
  });

  // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
  bot.onText(/\/admin_help/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user?.isAdmin) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    bot.sendMessage(chatId,
      "üë®‚Äçüíº *–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:*\n\n" +
      "üìä *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏:*\n" +
      "‚Ä¢ `/add_product` - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Ç–æ–≤–∞—Ä\n" +
      "‚Ä¢ `/edit_product <id>` - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä\n" +
      "‚Ä¢ `/delete_product <id>` - –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä\n\n" +
      "üìÅ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏:*\n" +
      "‚Ä¢ `/add_category` - –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é\n" +
      "‚Ä¢ `/edit_category <id>` - –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é\n" +
      "‚Ä¢ `/delete_category <id>` - –£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é\n\n" +
      "üì¶ *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏:*\n" +
      "‚Ä¢ `/order_status <id> <status>` - –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞\n" +
      "‚Ä¢ `/orders_list` - –°–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–æ–≤\n\n" +
      "üé´ *–¢–∏–∫–µ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏:*\n" +
      "‚Ä¢ `/tickets_list` - –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤\n" +
      "‚Ä¢ `/close_ticket <id>` - –ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç\n" +
      "‚Ä¢ `/reply_ticket <id> <—Ç–µ–∫—Å—Ç>` - –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ç–∏–∫–µ—Ç",
      { parse_mode: "Markdown" }
    );
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞
  bot.onText(/\/add_product/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user?.isAdmin) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    const categories = await storage.getCategories();
    const keyboard = {
      inline_keyboard: categories.map(cat => [{
        text: cat.name,
        callback_data: `new_product_cat_${cat.id}`
      }])
    };

    bot.sendMessage(chatId,
      "üìù *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞*\n\n" +
      "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞:",
      {
        parse_mode: "Markdown",
        reply_markup: keyboard
      }
    );
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–æ–≤–∞—Ä–∞
  bot.onText(/new_product_cat_(\d+)/, async (msg, match) => {
    if (!match) return;

    const chatId = msg.chat.id;
    const categoryId = parseInt(match[1]);

    bot.sendMessage(chatId,
      "üìù *–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞*\n\n" +
      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n\n" +
      "`–Ω–∞–∑–≤–∞–Ω–∏–µ\n–æ–ø–∏—Å–∞–Ω–∏–µ\n—Ü–µ–Ω–∞\n–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ`\n\n" +
      "–ù–∞–ø—Ä–∏–º–µ—Ä:\n" +
      "Premium Account\n" +
      "–ü—Ä–µ–º–∏—É–º –∞–∫–∫–∞—É–Ω—Ç –Ω–∞ 30 –¥–Ω–µ–π\n" +
      "1000\n" +
      "50",
      { parse_mode: "Markdown" }
    );
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–∞
  bot.onText(/\/orders_list/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user?.isAdmin) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    const orders = await storage.getOrders();
    const recentOrders = orders.slice(-10); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–∫–∞–∑–æ–≤

    if (recentOrders.length === 0) {
      bot.sendMessage(chatId,
        "üìä *–°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ –ø—É—Å—Ç*\n\n" +
        "–í —Å–∏—Å—Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalRevenue = orders.reduce((sum, order) => sum + order.totalPrice, 0);
    const pendingOrders = orders.filter(o => o.status === 'pending').length;
    const paidOrders = orders.filter(o => o.status === 'paid').length;

    bot.sendMessage(chatId,
      "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤*\n\n" +
      `–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${orders.length}\n` +
      `–û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: $${(totalRevenue / 100).toFixed(2)}\n` +
      `–û–∂–∏–¥–∞—é—Ç –æ–ø–ª–∞—Ç—ã: ${pendingOrders}\n` +
      `–û–ø–ª–∞—á–µ–Ω—ã: ${paidOrders}\n\n` +
      "*–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:*",
      { parse_mode: "Markdown" }
    );

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–∫–∞–∑–∞—Ö
    for (const order of recentOrders) {
      const product = await storage.getProduct(order.productId);
      const user = await storage.getUser(order.userId);
      if (!product || !user) continue;

      const statusEmoji = {
        pending: "‚è≥",
        paid: "üí∞",
        delivered: "‚úÖ",
        cancelled: "‚ùå"
      }[order.status] || "‚ùì";

      const orderDate = new Date(order.createdAt).toLocaleString('ru-RU', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });

      const keyboard = {
        inline_keyboard: [
          [
            { text: "‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω", callback_data: `order_status_${order.id}_delivered` },
            { text: "‚ùå –û—Ç–º–µ–Ω—ë–Ω", callback_data: `order_status_${order.id}_cancelled` }
          ]
        ]
      };

      bot.sendMessage(chatId,
        `üõç *–ó–∞–∫–∞–∑ #${order.id}*\n\n` +
        `–ü–æ–∫—É–ø–∞—Ç–µ–ª—å: ${user.username}\n` +
        `–¢–æ–≤–∞—Ä: ${product.name}\n` +
        `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${order.quantity} —à—Ç.\n` +
        `–°—É–º–º–∞: $${(order.totalPrice / 100).toFixed(2)}\n` +
        `–°—Ç–∞—Ç—É—Å: ${statusEmoji} ${order.status}\n` +
        `–î–∞—Ç–∞: ${orderDate}`,
        {
          parse_mode: "Markdown",
          reply_markup: keyboard
        }
      );
    }
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
  bot.on('callback_query', async (query) => {
    if (!query.data || !query.message) return;

    const chatId = query.message.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user?.isAdmin) {
      bot.answerCallbackQuery(query.id, {
        text: "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
        show_alert: true
      });
      return;
    }

    if (query.data.startsWith('order_status_')) {
      const [, , orderId, newStatus] = query.data.split('_');
      const order = await storage.getOrder(parseInt(orderId));

      if (order) {
        await storage.updateOrder(order.id, { status: newStatus });

        bot.answerCallbackQuery(query.id, {
          text: `–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ #${orderId} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ ${newStatus}`,
          show_alert: true
        });

        // –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
        const buyer = await storage.getUser(order.userId);
        if (buyer?.telegramId) {
          const statusMessages = {
            delivered: "‚úÖ –í–∞—à –∑–∞–∫–∞–∑ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!",
            cancelled: "‚ùå –í–∞—à –∑–∞–∫–∞–∑ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π."
          };

          bot.sendMessage(buyer.telegramId,
            `üì¶ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞ #${order.id}*\n\n${statusMessages[newStatus as 'delivered' | 'cancelled']}`,
            { parse_mode: "Markdown" }
          );
        }
      }
    } else if (query.data.startsWith('category_')) {
      const categoryId = parseInt(query.data.split('_')[1]);
      const products = await storage.getProducts();
      const categoryProducts = products.filter(p => p.categoryId === categoryId);

      if (categoryProducts.length === 0) {
        bot.sendMessage(chatId,
          "üòï *–ö–∞—Ç–µ–≥–æ—Ä–∏—è –ø—É—Å—Ç–∞*\n\n" +
          "–í –¥–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.",
          { parse_mode: "Markdown" }
        );
        return;
      }

      const category = await storage.getCategory(categoryId);
      if (category) {
        bot.sendMessage(chatId,
          `üìÅ *${category.name}*\n\n` +
          `${category.description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}\n\n` +
          `–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: ${categoryProducts.length}`,
          { parse_mode: "Markdown" }
        );
      }

      for (const product of categoryProducts) {
        const keyboard = {
          inline_keyboard: [[{
            text: `üí≥ –ö—É–ø–∏—Ç—å –∑–∞ $${(product.price / 100).toFixed(2)}`,
            callback_data: `buy_${product.id}`
          }]]
        };

        bot.sendMessage(chatId,
          `üè∑ *${product.name}*\n\n` +
          `üìù ${product.description}\n\n` +
          `üí∞ –¶–µ–Ω–∞: $${(product.price / 100).toFixed(2)}\n` +
          `üì¶ –í –Ω–∞–ª–∏—á–∏–∏: ${product.stock} —à—Ç.`,
          {
            parse_mode: "Markdown",
            reply_markup: keyboard
          }
        );
      }
    } else if (query.data.startsWith('buy_')) {
      const productId = parseInt(query.data.split('_')[1]);
      const product = await storage.getProduct(productId);

      if (!product) {
        bot.sendMessage(chatId,
          "‚ùå *–û—à–∏–±–∫–∞*\n\n" +
          "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.",
          { parse_mode: "Markdown" }
        );
        return;
      }

      if (product.stock <= 0) {
        bot.sendMessage(chatId,
          "‚ö†Ô∏è *–¢–æ–≤–∞—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω*\n\n" +
          "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è.\n" +
          "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–æ–≤–∞—Ä –∏–ª–∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –ø–æ–∑–∂–µ.",
          { parse_mode: "Markdown" }
        );
        return;
      }

      // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –ø–æ –æ–ø–ª–∞—Ç–µ
      bot.sendMessage(chatId,
        `üõí *–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞*\n\n` +
        `–¢–æ–≤–∞—Ä: ${product.name}\n` +
        `–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: $${(product.price / 100).toFixed(2)}\n\n` +
        `üí≥ *–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:*\n` +
        `‚Ä¢ USDT (TRC20): \`<–∞–¥—Ä–µ—Å_–∫–æ—à–µ–ª—å–∫–∞>\`\n` +
        `‚Ä¢ BTC: \`<–∞–¥—Ä–µ—Å_–∫–æ—à–µ–ª—å–∫–∞>\`\n\n` +
        `üìù –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É:\n` +
        `/support –û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ ${product.name} - <ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏>`,
        { parse_mode: "Markdown" }
      );

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å–ª–æ–≤–∏—è—Ö
      bot.sendMessage(chatId,
        "‚ÑπÔ∏è *–í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:*\n\n" +
        "‚Ä¢ –û–ø–ª–∞—Ç–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n" +
        "‚Ä¢ –¢–æ–≤–∞—Ä –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã\n" +
        "‚Ä¢ –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞: 5-15 –º–∏–Ω—É—Ç\n" +
        "‚Ä¢ –ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –ø—Ä–æ–±–ª–µ–º –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É\n\n" +
        "üîí –ú—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å–¥–µ–ª–∫–∏ –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö",
        { parse_mode: "Markdown" }
      );
    }
  });

  bot.onText(/üõç –ö–∞—Ç–∞–ª–æ–≥/, async (msg) => {
    const chatId = msg.chat.id;
    const categories = await storage.getCategories();

    if (categories.length === 0) {
      bot.sendMessage(chatId,
        "üòï *–ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç*\n\n" +
        "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    const keyboard = {
      inline_keyboard: categories.map(cat => [{
        text: `üìÅ ${cat.name}`,
        callback_data: `category_${cat.id}`
      }])
    };

    bot.sendMessage(chatId,
      "üõç *–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤*\n\n" +
      "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
      {
        parse_mode: "Markdown",
        reply_markup: keyboard
      }
    );
  });


  bot.onText(/üõí –ú–æ–∏ –∑–∞–∫–∞–∑—ã/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    const orders = await storage.getUserOrders(user.id);

    if (orders.length === 0) {
      bot.sendMessage(chatId,
        "üì≠ *–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –ø—É—Å—Ç–∞*\n\n" +
        "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤.\n" +
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É üõç –ö–∞—Ç–∞–ª–æ–≥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const totalSpent = orders.reduce((sum, order) => sum + order.totalPrice, 0);
    const statusCounts = orders.reduce((acc, order) => {
      acc[order.status] = (acc[order.status] || 0) + 1;
      return acc;
    }, {} as Record<string, number>);

    bot.sendMessage(chatId,
      "üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–∫–∞–∑–æ–≤*\n\n" +
      `–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${orders.length}\n` +
      `–û–±—â–∞—è —Å—É–º–º–∞: $${(totalSpent / 100).toFixed(2)}\n\n` +
      "*–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:*\n" +
      `‚è≥ –û–∂–∏–¥–∞—é—Ç –æ–ø–ª–∞—Ç—ã: ${statusCounts['pending'] || 0}\n` +
      `üí∞ –û–ø–ª–∞—á–µ–Ω—ã: ${statusCounts['paid'] || 0}\n` +
      `‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω—ã: ${statusCounts['delivered'] || 0}\n` +
      `‚ùå –û—Ç–º–µ–Ω–µ–Ω—ã: ${statusCounts['cancelled'] || 0}`,
      { parse_mode: "Markdown" }
    );

    // –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏ –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞
    for (const order of orders) {
      const product = await storage.getProduct(order.productId);
      if (!product) continue;

      const statusEmoji = {
        pending: "‚è≥",
        paid: "üí∞",
        delivered: "‚úÖ",
        cancelled: "‚ùå"
      }[order.status] || "‚ùì";

      const formattedDate = new Date(order.createdAt).toLocaleString('ru-RU', {
        year: 'numeric',
        month: 'long',
        day: 'numeric',
        hour: '2-digit',
        minute: '2-digit'
      });

      bot.sendMessage(chatId,
        `üì¶ *–ó–∞–∫–∞–∑ #${order.id}*\n\n` +
        `–¢–æ–≤–∞—Ä: ${product.name}\n` +
        `–°—Ç–∞—Ç—É—Å: ${statusEmoji} ${order.status}\n` +
        `–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${order.quantity} —à—Ç.\n` +
        `–°—É–º–º–∞: $${(order.totalPrice / 100).toFixed(2)}\n` +
        `–î–∞—Ç–∞: ${formattedDate}\n\n` +
        (order.status === 'pending' ?
          "üí° *–û–∂–∏–¥–∞–µ—Ç—Å—è –æ–ø–ª–∞—Ç–∞*\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /support –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏" :
          ""),
        { parse_mode: "Markdown" }
      );
    }
  });

  bot.onText(/üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞/, async (msg) => {
    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    const tickets = await storage.getUserTickets(user.id);
    const openTickets = tickets.filter(t => t.status === 'open').length;

    bot.sendMessage(chatId,
      "üí¨ *–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞*\n\n" +
      `–£ –≤–∞—Å ${openTickets} ${openTickets === 1 ? '–æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç' : '–æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤'}\n\n` +
      "–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π —Ç–∏–∫–µ—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n" +
      "`/support <–≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ>`\n\n" +
      "–ü—Ä–∏–º–µ—Ä—ã –æ–±—Ä–∞—â–µ–Ω–∏–π:\n" +
      "‚Ä¢ `/support –ù–µ –ø–æ–ª—É—á–∏–ª —Ç–æ–≤–∞—Ä –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã`\n" +
      "‚Ä¢ `/support –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π —Ç–æ–≤–∞—Ä–∞`\n" +
      "‚Ä¢ `/support –í–æ–ø—Ä–æ—Å –ø–æ –æ–ø–ª–∞—Ç–µ`\n\n" +
      "‚ö°Ô∏è –°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: 30 –º–∏–Ω—É—Ç\n" +
      "üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏: 24/7",
      { parse_mode: "Markdown" }
    );
  });

  bot.onText(/‚ùì –ü–æ–º–æ—â—å/, (msg) => {
    bot.onText(/\/help/, msg);
  });

  bot.onText(/\/support (.+)/, async (msg, match) => {
    if (!match) return;

    const chatId = msg.chat.id;
    const user = await storage.getUserByTelegramId(chatId.toString());

    if (!user) {
      bot.sendMessage(chatId,
        "‚ùå *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n" +
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ.",
        { parse_mode: "Markdown" }
      );
      return;
    }

    const ticket = await storage.createTicket({
      userId: user.id,
      subject: "–ó–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏–∑ Telegram",
      message: match[1],
      status: "open"
    });

    bot.sendMessage(chatId,
      `üì® *–¢–∏–∫–µ—Ç —Å–æ–∑–¥–∞–Ω*\n\n` +
      `–ù–æ–º–µ—Ä —Ç–∏–∫–µ—Ç–∞: #${ticket.id}\n\n` +
      `–ú—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –∏ –æ—Ç–≤–µ—Ç–∏–º —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.\n` +
      `–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!`,
      { parse_mode: "Markdown" }
    );
  });
}